# Configuration values for yesnoapp Flask application

replicaCount: 1

yesnoapp:
  image:
    repository: oskarq/yesnoapp
    tag: redis
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 6060
    targetPort: 5000
  ingress:
    enabled: true
    annotations: {}
    hosts:
      - host: # yesnoapp.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
  environment:
    FLASK_ENV: development

# Redis configuration using the bitnami/redis chart
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

# Pod configuration
podAnnotations: {}
securityContext: {}
  # Example: Uncomment and adjust if needed
  # runAsUser: 1000
  # fsGroup: 2000

# Service configuration for yesnoapp (if needed, otherwise it's handled under yesnoapp.service)
# Removing the nginx related configurations and the global service definition

# Liveness and Readiness Probes for the yesnoapp Flask application
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Resources: Define limits and requests for CPU and memory for the yesnoapp container
resources: {}
  # Example: Uncomment and adjust if needed
  # limits:
  #   cpu: "1"
  #   memory: 512Mi
  # requests:
  #   cpu: "0.5"
  #   memory: 256Mi

# Autoscaling for the yesnoapp Flask application (if applicable)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional configurations
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

nodeSelector: {}
tolerations: []
affinity: {}
